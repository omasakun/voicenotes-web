diff --git a/dist/es/shared/node-entry.js b/dist/es/shared/node-entry.js
index b9f28c825157fcad57d2e468339ffe6a71d893b4..52e71721e7bd58ac534f86d9090c76c13b779d40 100644
--- a/dist/es/shared/node-entry.js
+++ b/dist/es/shared/node-entry.js
@@ -11829,6 +11829,7 @@ class BinaryExpression extends NodeBase {
             return UnknownValue;
         // Optimize `'export' in namespace`
         if (this.operator === 'in' && this.right.variable?.isNamespace) {
+            if (!this.right.variable.context) return UnknownValue;
             return (this.right.variable.context.traceExport(String(leftValue))[0] != null);
         }
         const rightValue = this.right.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);
diff --git a/dist/shared/rollup.js b/dist/shared/rollup.js
index 6d77f47fbb0956b4ada8dbc37f858d52ab652f8d..cbedf8207c5d21c56d3904841cde24813ea10513 100644
--- a/dist/shared/rollup.js
+++ b/dist/shared/rollup.js
@@ -13438,6 +13438,7 @@ class BinaryExpression extends NodeBase {
             return UnknownValue;
         // Optimize `'export' in namespace`
         if (this.operator === 'in' && this.right.variable?.isNamespace) {
+            if (!this.right.variable.context) return UnknownValue;
             return (this.right.variable.context.traceExport(String(leftValue))[0] != null);
         }
         const rightValue = this.right.getLiteralValueAtPath(EMPTY_PATH, recursionTracker, origin);
